/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>
using namespace std;
class Base
{
    public:
    Base(){cout<<"Constructing Base\n";}
    ~Base(){cout<<"Destroying Base\n";}
};
class Derive:public Base
{
    public:
    Derive(){cout<<"Constructing Derive\n";}
    ~Derive(){cout<<"Destryoing Derive\n";}
    
};
int main()
{
    Base*basePtr=new Derive();
    delete basePtr;
    return 0;
}
==================================
Result:
Constructing Base
Constructing Derive
Destroying Base
==================================
#include <iostream>
using namespace std;
 
int main()
{
    int arr[5]={11,22,33,44,55};
    for(int i=0;i<5;i++)
    {
        cout<<*(arr+i)<<" ";
    }
    return 0;
}
 
=============================
11 22 33 44 55
============================



Which one of the following is the correct way to declare a pure virtual function?

Virtual test()=0;
===========================



#include <iostream>
using namespace std;
int main()
{
    std::string s("mathworks");
    for(;s!='\0';s++)
    {
        printf("%c",s);
    }
    return 0;
    
}
==================
Compiler error
==================



