#include <bits/stdc++.h>
using namespace std;
void fun(vector<vector<int>> &V,int p,int q, int k){
int si=V.size();
if(k==1)
return;
if(p-1>=0){
if( V[p-1][q]>=2 && V[p-1][q]<=k-1||V[p-1][q]==0){
V[p-1][q]=k;
fun(V,p-1,q,k-1);
}
}
if(p+1<si){
if(V[p+1][q]==0 || V[p+1][q]>=2 && V[p+1][q]<=k-1){
V[p+1][q]=k;
fun(V,p+1,q,k-1);
}
}
if(p-1>=0){
if(V[p][q-1]==0 || V[p][q-1]>=2 && V[p][q-1]<=k-1){
V[p][q-1]=k;
fun(V,p,q-1,k-1);
}
}
if(p+1<V[0].size()){
if(V[p][q+1]==0 || V[p][q+1]>=2 && V[p][q+1]<=k-1){
V[p][q+1]=k;
fun(V,p,q+1,k-1);
}
}
  
}

int solution(vector<vector<int>> &V, int K){
int R=V.size();
int C=V[0].size();
K++;
for(int i=0;i<R;i++){
    for(int j=0;j<C;j++){
if(V[i][j]==1){
fun(V,i,j,K);
}
}
}
int count=0;
for(int i=0;i<R;i++){
     for(int j=0;j<C;j++){
if(V[i][j]==0)
count++;
}
}
return count;
}
int main()
{
vector<vector<int>> V={{1,0,0},{0,0,0},{0,0,1},{0,1,0}}; 
cout<<solution(V,1);
return 0;
}
