/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
     void inorder(TreeNode* root,vector<int>&v)
    { 
         if(root==NULL)
    {
        return ;
    }
        inorder(root->left,v);
        v.push_back(root->val);
        inorder(root->right,v);
    }
public:
   
    int findSecondMinimumValue(TreeNode* root) {
        vector<int>v;
        inorder(root,v);
        set<int>s;
        for(int i=0;i<v.size();i++)
        {
            s.insert(v[i]);
        }
        if(s.size()<=1)
        {
            return -1;
        }
        else
        {
        auto it=s.begin();
        it++;
        return *it;
        }
    }
};
