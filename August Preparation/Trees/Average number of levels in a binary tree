/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<double>v;
        queue<TreeNode*>q;
        if(root==NULL)
        {
            return {};
        }
        q.push(root);
        while(q.empty()==false)
        {
            int size=q.size();
            double sum=0.0;
            for(int i=0;i<size;i++)
            {
                TreeNode* node=q.front();
                q.pop();
                sum+=node->val;
                if(node->left)q.push(node->left);
                if(node->right)q.push(node->right);
            }
            sum=double(sum)/double(size);
            v.push_back(sum);
            
        }
        return v;
    }
};
