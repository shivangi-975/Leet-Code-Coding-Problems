class Solution {
public:
    string mergeAlternately(string word1, string word2) {
        int n=word1.size();
        int m=word2.size();
        string s;
        for(int i=0;i<n||i<m;i++)
        {   if(i<n){
            s.push_back(word1[i]);
        }  
        if(i<m)
        {
            s.push_back(word2[i]);
        }}
        return ans;
        
    }
};
class Solution {
public:
    string mergeAlternately(string word1, string word2) {
        int m=0;
        int n=0;
        string s;
        while(m<word1.size() && n<word2.size())
        {
            s=s+word1[m]+word2[n];
            m++;
            n++;
        }
        while(m<word1.size())
        {
            s=s+word1[m];
            m++;
        }
        while(n<word2.size())
        {
           s=s+word2[n]; 
            n++;
           
        }
         return s;
    }
};
