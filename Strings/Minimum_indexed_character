// { Driver Code Starts
// C++ implementation to find the character in first 
// string that is present at minimum index in second
// string
#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends



class Solution
{
    public:
    //Function to find the minimum indexed character.
    int minIndexChar(string str, string patt)
    {
        // Your code here
        unordered_set<char>set;
        for(int i=0;i<patt.length();i++)
        {
            set.insert(patt[i]);
        }
        for(int i=0;i<str.length();i++)
        {
            if(set.find(str[i])!=set.end())
            {
                return i;
            }
        }
        return -1;
    }
};

// { Driver Code Starts.

int main()
{
	int t;
	cin>>t;
	while(t--)
	{
	    string str;
	    string patt;
	    cin>>str;
	    cin>>patt;
	    Solution obj;
	    int ans = obj.minIndexChar(str, patt);
	    if(ans == -1)cout<<"No character present";
	    else cout<<str[ans];
	    cout<<endl;
	}return 0;
}
  // } Driver Code Ends
  
  
  
  
  -----------------------------------------------------------------------------
  //USING MAP
  
  // { Driver Code Starts
// C++ implementation to find the character in first 
// string that is present at minimum index in second
// string
#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends



class Solution
{
    public:
    //Function to find the minimum indexed character.
    int minIndexChar(string str, string patt)
    {
        // Your code here
        int hst[256];
        fill(hst,hst+256,-1);
        for(int i=0;i<str.size();i++)
        {if(hst[str[i]]==-1)
            hst[str[i]]=i;
        }
        int res=INT_MAX;
        for(int i=0;i<patt.size();i++)
        {
            if(hst[patt[i]]!=-1)
            {
                res=min(res,hst[patt[i]]);
            }
           
        }
        return  (res==INT_MAX)?-1:res;
    }
};

// { Driver Code Starts.

int main()
{
	int t;
	cin>>t;
	while(t--)
	{
	    string str;
	    string patt;
	    cin>>str;
	    cin>>patt;
	    Solution obj;
	    int ans = obj.minIndexChar(str, patt);
	    if(ans == -1)cout<<"No character present";
	    else cout<<str[ans];
	    cout<<endl;
	}return 0;
}
  // } Driver Code Ends
