/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int countUnivalSubtrees(TreeNode* root) {
      int res=0;
      dfs(root,res);
        return res;     
    }
    bool dfs(TreeNode* root,int & res)
    {
        if(root==NULL)
        {
            return true;
        }
        bool left=dfs(root->left,res);
        bool right=dfs(root->right,res);
        if(left)
        {
            if(root->left &&root->val!=root->left->val)
            {
                return false;
            }
        }
         if(right)
        {
            if(root->right &&root->val!=root->right->val)
            {
                return false;
            }
        }
        if(left&&right)
        {
            res++;
        }
        return left&&right;
    }
};
