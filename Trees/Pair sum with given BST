#include <bits/stdc++.h>
using namespace std;

struct Node  
{ 
  int key; 
  struct Node *left;
  struct Node *right; 
  Node(int k){
      key=k;
      left=right=NULL;
  }
};

void tolist(Node *root,vector<int>&list)
{   
    if(root!=NULL)
{
    tolist(root->left,list);
    list.push_back(root->key);
    tolist(root->right,list);
}
    
}
    
bool isPairPresent(Node *root, int target) 
    { 
        vector<int>a;
        tolist(root,a);
        int start=0;
        int end=a.size()-1;
        while(start<end)
        {
            if(a[start]+a[end]==target)
            { cout<<"pair found";
                return true;
            }
             if(a[start]+a[end]<target)
            {
                start++;
            }
            if(a[start]+a[end]>target)
            {
                end--;
            }
        }

cout<<"no pair found";
return false;
    }

int main() {
	
	Node *root = new Node(10);  
    root->left = new Node(8);  
    root->right = new Node(20);  
    root->left->left = new Node(4);
    root->left->right = new Node(9);
    root->right->left = new Node(11);
    root->right->right = new Node(30);  
    root->right->right->left = new Node(25);
        
    int sum=33;
        
    isPairPresent(root,sum);
          
    return 0;  
	
}
