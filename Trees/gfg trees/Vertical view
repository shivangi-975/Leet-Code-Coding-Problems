class Solution
{
    public:
    //Function to find the vertical order traversal of Binary Tree.
    vector<int> verticalOrder(Node *root)
    {
        //Your code here
        map<int,vector<int>>m;
        vector<int>a;
        queue<pair<Node*,int>>q;
        q.push({root,0});
        while(q.empty()==false)
        {
            auto p=q.front();
            Node *curr=p.first;
            int hd=p.second;
            m[hd].push_back(curr->data);
            q.pop();
            if(curr->left!=NULL)
            {
                q.push({curr->left,hd-1});
            }
            if(curr->right!=NULL)
            {
                q.push({curr->right,hd+1});
            }
        }
        for(auto x:m)
        {
            for(int y:x.second)
            {
                a.push_back(y);
            }
            
        }
        return a;
    }
};



// { Driver Code Starts.
int main() {
    int t;
    string  tc;
    getline(cin,tc);
    t=stoi(tc);
    while(t--)
    {
        string s;
        getline(cin,s);
        // string c;
        // getline(cin,c);
        Solution obj;
    	Node* root = buildTree(s);
    	
    	vector <int> res = obj.verticalOrder(root);
    	for (int i : res) cout << i << " ";
        cout << endl;
    }
	return 0;
}


  // } Driver Code Ends
