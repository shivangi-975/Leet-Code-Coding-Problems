// { Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution{
public:
 int dp[101][10001];
bool subset_sum(int arr[],int N,int sum)
{
    if(N==0)
    {
        return 0;
    }
    if(sum==0)
    {
        return 1;
    }
    if(dp[N][sum]!=-1)
    {
        return dp[N][sum];
    }
    if(arr[N-1]<=sum)
    {
        dp[N][sum]=subset_sum(arr,N-1,sum-arr[N-1])||subset_sum(arr,N-1,sum);
    }
    else
    {
         dp[N][sum]=subset_sum(arr,N-1,sum);
    }
    return dp[N][sum];
}
    int equalPartition(int N, int arr[])
    {
        // code here
        int sum=0;
        for(int i=0;i<N;i++)
        {
            sum=sum+arr[i];
        }
        
       
        memset(dp,-1,sizeof(dp));
        if(sum%2!=0)
        {
            return 0;
        }
        else
        {
            return  subset_sum(arr,N,sum/2);
        }
       
    }
};

// { Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int N;
        cin>>N;
        int arr[N];
        for(int i = 0;i < N;i++)
            cin>>arr[i];
        
        Solution ob;
        if(ob.equalPartition(N, arr))
            cout<<"YES\n";
        else
            cout<<"NO\n";
    }
    return 0;
}  // } Driver Code Ends
