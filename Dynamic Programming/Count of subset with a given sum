int subset(vector<int> &A,int B,int n,int dp[][101])
{
if(n==0)
{
    return 0;
}
if(B==0)
{
    return 1;
}
if(dp[B][n]!=-1)
{
     return dp[B][n];
}
if(A[n-1]<=B)
{
    dp[B][n]=(subset(A,B-A[n-1],n-1,dp)+subset(A,B,n-1,dp));
}
else
{
 dp[B][n]=subset(A,B,n-1,dp);
}
return dp[B][n];
}




int Solution::solve(vector<int> &A, int B) {
    int dp[100001][101];
    memset(dp,-1,sizeof(dp));
    return subset(A,B,A.size(),dp);
}
 
